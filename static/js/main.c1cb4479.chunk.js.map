{"version":3,"sources":["App.module.css","Components/Cards/Cards.module.css","Components/CountryPicker/CountryPicker.module.css","Components/Cards/Card/Card.module.css","Components/Chart/Chart.module.css","Components/Table/TableData.module.css","Components/Cards/Card/Card.jsx","Components/Cards/Cards.jsx","Components/Chart/Chart.jsx","api/index.js","Components/CountryPicker/CountryPicker.jsx","Components/util.jsx","Components/Table/TableData.jsx","images/image.png","App.js","index.js"],"names":["module","exports","CardComponent","className","cardTitle","value","lastUpdate","cardSubtitle","Grid","item","xs","md","component","Card","cx","styles","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Info","data","cases","recovered","deaths","updated","active","population","container","spacing","justify","infected","Chart","country","message","doughnutChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","url","fetchData","a","changeableUrl","axios","get","fetchCountries","countries","map","name","Countries","handleCountryChange","useState","setCountries","useEffect","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","sortData","sortedData","sort","b","TableData","tableData","setTableData","getCountriesData","fetch","then","response","json","table","countryInfo","alt","src","flag","App","state","setState","this","img","image","countryPicker","CountryPicker","Cards","left","right","chart","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1cb4479.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1FZPZ\",\"chart\":\"App_chart__2KOll\",\"countryPicker\":\"App_countryPicker__3Z_G1\",\"img\":\"App_img__2wa18\",\"right\":\"App_right__p5NnI\",\"image\":\"App_image__3-CGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2aJ54\",\"infected\":\"Cards_infected__1uPqU\",\"recovered\":\"Cards_recovered__1gT-2\",\"deaths\":\"Cards_deaths__PfLcI\",\"active\":\"Cards_active__irfte\",\"population\":\"Cards_population__1BQ3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__Ug94F\",\"text\":\"CountryPicker_text__2Gi8D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__AxM_P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PTEd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TableData_table__LG1At\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Card.module.css';\r\n\r\nconst CardComponent = ({ className, cardTitle, value, lastUpdate, cardSubtitle }) => (\r\n  <Grid item xs={12} md={3} component={Card} className={cx(styles.card, className)}>\r\n    <CardContent>\r\n      <Typography color=\"textSecondary\" gutterBottom>\r\n        {cardTitle}\r\n      </Typography>\r\n      <Typography variant=\"h5\" component=\"h2\">\r\n        <CountUp start={0} end={value} duration={2.75} separator=\",\" />\r\n      </Typography>\r\n      <Typography color=\"textSecondary\">\r\n        {new Date(lastUpdate).toDateString()}\r\n      </Typography>\r\n      <Typography variant=\"body2\" component=\"p\">\r\n        {cardSubtitle}\r\n      </Typography>\r\n    </CardContent>\r\n  </Grid>\r\n);\r\n\r\nexport default CardComponent;","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport CardComponent from './Card/Card';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Info = ({ data: { cases, recovered, deaths, updated, active, population } }) => {\r\n  if (!cases) {\r\n    return 'Loading...';\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <CardComponent\r\n          className={styles.infected}\r\n          cardTitle=\"Infected\"\r\n          value={cases}\r\n          lastUpdate={updated}\r\n          cardSubtitle=\"Total Number of Reported Cases.\"\r\n        />\r\n        <CardComponent\r\n          className={styles.recovered}\r\n          cardTitle=\"Recovered\"\r\n          value={recovered}\r\n          lastUpdate={updated}\r\n          cardSubtitle=\"Total Number of Recoveries.\"\r\n        />\r\n        <CardComponent\r\n          className={styles.active}\r\n          cardTitle=\"Active\"\r\n          value={active}\r\n          lastUpdate={updated}\r\n          cardSubtitle=\"Total Number of Active Cases.\"\r\n        />\r\n        <CardComponent\r\n          className={styles.deaths}\r\n          cardTitle=\"Deaths\"\r\n          value={deaths}\r\n          lastUpdate={updated}\r\n          cardSubtitle=\"Total Number of Deaths.\"\r\n        />\r\n        <CardComponent\r\n          className={styles.population}\r\n          cardTitle=\"Population\"\r\n          value={population}\r\n          lastUpdate={updated}\r\n          cardSubtitle=\"Total Population.\"\r\n        />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;","import React from 'react';\r\nimport { Chart as ChartJS } from 'chart.js/auto';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { cases, recovered, deaths,active }, country }) => {\r\n  // console.log({ country });\r\n  let message = \"\";\r\n  if (country) {\r\n    message = `Current State in ${country}`;\r\n  }\r\n  else{\r\n    message = `Global Data`;\r\n  }\r\n\r\n  const doughnutChart = (\r\n    cases ? (\r\n      <Doughnut\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Active', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: message,\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)','rgba(255, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)' ],\r\n              data: [cases, recovered,active, deaths],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: message },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {doughnutChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://disease.sh/v3/covid-19'; // base url\r\n\r\n\r\n//this function fetches the country wise data\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n  // if country != global\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n  else {\r\n    changeableUrl = `${url}/all`;\r\n  }\r\n\r\n  try {\r\n    const { data: { cases, recovered, deaths, updated, active, population } } = await axios.get(changeableUrl);\r\n    return { cases, recovered, deaths, updated, active, population };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\n// this function fetches the country list\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`https://covid19.mathdro.id/api/countries`);\r\n    //console.log({countries});\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n      //console.log(countries);\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option className={styles.text} value=\"\">Global</option>\r\n        {countries.map((country, i) => <option className={styles.text} key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;","export const sortData = (data) => {\r\n    const sortedData = [...data];\r\n    sortedData.sort((a, b) => {\r\n      if (a.cases > b.cases) {\r\n        return -1;\r\n      } else {\r\n        return 1;\r\n      }\r\n    });\r\n    return sortedData;\r\n  };","import React, { useState, useEffect } from \"react\";\r\nimport styles from './TableData.module.css';\r\nimport { sortData } from '../util';\r\nimport CountUp from 'react-countup';\r\n\r\nconst TableData = () => {\r\n  const [tableData, setTableData] = useState([]);\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          // console.log(data);\r\n          // const countries = data.map((country) => ({\r\n          //   name: country.country,\r\n          //   value: country.countryInfo.iso2,\r\n          // }));\r\n\r\n          const sortedData = sortData(data);\r\n          setTableData(sortedData);\r\n        });\r\n    };\r\n    getCountriesData();\r\n  }, [])\r\n  return (\r\n    <>\r\n    <h3>Confirmed Cases by Country</h3>\r\n    <div className={styles.table}>\r\n      {tableData.map(({ country, cases, countryInfo }) => (\r\n        <tr>\r\n          <td> <img alt=\"flag\" src={countryInfo.flag} /> {country} </td>\r\n          <td>\r\n            <strong><CountUp start={0} end={cases} duration={2.75} separator=\",\" /></strong> \r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TableData;\r\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\n\nimport { Cards, CountryPicker, Chart, TableData } from './Components';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\n\nimport image from './images/image.png';\nimport { CardContent } from \"@material-ui/core\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData(\"\"); // fetches the data of all countries\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country); // fetches data of a particular country\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state; // destructuring of data\n    return (\n      <>\n        <div className={styles.img}>\n          <img className={styles.image} src={image} alt=\"COVID-19\" />\n        </div>\n        <div className={styles.countryPicker}>\n          <CountryPicker handleCountryChange={this.handleCountryChange} />\n        </div>\n        <div className={styles.container}>\n          <Cards className={styles.left} data={data} />\n          <CardContent>\n            <TableData className={styles.right} />\n          </CardContent>\n        </div>\n        <div className={styles.chart}>\n          <Chart data={data} country={country} />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}